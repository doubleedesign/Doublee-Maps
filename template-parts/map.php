<section id="map"></section>   
<?php 
// Get the IDs for the addresses using the query function in functions/map-data.php
$address_ids = doublee_get_address_ids(); 

// We need two arrays for the stuff we're outputting inside the JavaScript.
// The first (indexed) array will contain the full strings required for the map marker location variables - names and values (lat and long).
$data_strings = array(); 
// The second (multimensional) array will contain variable names and IDs, to be inserted into the code for markers and info windows (to call the values outputted by the strings).
// I'm gonna go ahead and call those map pins, because that's what we're using them for.
$map_pins = array(); 

// For each address ID returned by doublee_get_address_ids(), get the data we need and push it into the relevant array.
foreach ($address_ids as $address_id) {

	// Get the ID and data array
	$id = $address_id;
	$data = doublee_get_address_data($id);

	// Get the name (post title in WP), make it all lowercase, and strip whitespace
	$name = get_the_title($address_id);
	$nicename = strtolower($name);
	$nicename = preg_replace('/\s+/', '', $nicename);

	// Put the lat and long into variables that we'll use to build the string
	$this_lat = $data['lat'];
	$this_long = $data['long'];

	// Build the full string required by the JS for each location variable
	// Example output: var geelong = { lat: -38.144575, lng: 144.364066 };
	$string = 'var ' . $nicename . ' = { lat: '. $this_lat .', lng: '. $this_long .' };';

	// Push into the arrays
	array_push($data_strings, $string);		
	array_push($map_pins, array(
		'id'		=>	$id,
		'nicename'	=>	$nicename, 
	)); 
}
?>

<script>
// Function to create the map
function initMap() {
	
	// Create a new StyledMapType object, passing it an array of styles, and the name to be displayed on the map type control (all found in functions/maps/map-style.php)
	// I know the location string for the file looks ridiculous, but get_stylesheet_directory() doesn't work.
	<?php 
	// Get the name of the theme folder using the textdomain in style.css - if this isn't working, make sure the textdomain is correct
	$theme = wp_get_theme(); 
	$theme_slug = $theme->get('TextDomain'); 
	?>
	var styledMapType = new google.maps.StyledMapType(<?php include($_SERVER['DOCUMENT_ROOT'].'/wp-content/themes/'.$theme_slug.'/functions/maps/map-style.php') ?>);
		
	// Create a map object, and include the MapTypeId to add to the map type control.
	var map = new google.maps.Map(document.getElementById('map'), {
		center: {lat: -37.967275, lng: 144.557713}, // the lat and long of a location to be used as the default centre of the map
		zoom: 9,
		mapTypeControlOptions: {
			mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain', 'styled_map']
		}
	});
	
	// Custom icon
	var icon = '<?php echo get_stylesheet_directory_uri();?>/assets/images/icons/map-marker.svg';

	<?php 
	// Output the variable strings generated by PHP above
	foreach ($data_strings as $location_variable_string_for_js) {
		echo $location_variable_string_for_js;
	}

	// Create the variable names, markers, and info windows using the variable names generated by PHP above
	// I'm going to go ahead and call the combination of a marker and an info window a map pin
	foreach ($map_pins as $map_pin) {

		// Grab the nested array values (the IDs and nicenames) as variables
		$id = $map_pin['id'];
		$marker_name = $map_pin['nicename'];

		// Output the JS for the markers 
		echo 'var marker' . $id . ' = new google.maps.Marker({';
			echo 'position: ' . $marker_name . ',';
			echo 'map: map,'; 
			echo 'icon: icon,';
		echo '});';
		
		// Get the info window content and store it in a variable
		$info = doublee_map_info_box($id); 
		
		// Output the JS required to put the $info content into the relevant JS variable for use in the info windows
		echo "var contentString_marker".$id . " = '".$info."';"; 
		
		// Output the JS for the info windows
		echo 'var infowindow'.$id.' = new google.maps.InfoWindow({';
			echo 'content: ' ;
			echo 'contentString_marker'.$id;
		echo '});';
		
		// Listen for click events on the markers and do stuff
		echo 'marker'. $id .'.addListener("click", function() {';
        	echo 'infowindow'.$id.'.open(map, marker'.$id.');'; // Open the info window
			echo 'map.setZoom(14);'; // Zoom in to the location
			echo 'map.setCenter(marker'.$id.'.getPosition());'; // Centre the map at the location
        echo '});';
		
		// Listen for close click events on the info windows and do stuff
		echo "google.maps.event.addListener(infowindow".$id.", 'closeclick', (function (infowindow".$id.") {";
		   	echo "return function () {";
				echo "map.setZoom(9);";
			echo "}";
		echo "})(infowindow".$id."));";
		
	}
	?>
	
	// Associate the styled map with the MapTypeId and set it to display.
	map.mapTypes.set('styled_map', styledMapType);
	map.setMapTypeId('styled_map');
	
}
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdhAAK4nZQCwSfHItr-9j5Q6NLgMsYPn4&callback=initMap"></script>